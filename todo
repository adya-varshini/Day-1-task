-----------------------TODO--------------------------------------------------------------

├── src/
│   ├── components/
│   │   ├── TodoForm.js
│   │   ├── TodoList.js
│   │   ├── TodoItem.js
│   ├── App.js
│   ├── index.js
│   ├── styles.css

-----------------------------------------
------------>TodoForm.js

import React, { useState } from 'react';
import axios from 'axios';

function TodoForm({ fetchTodos }) {
  const [name, setName] = useState('');
  const [description, setDescription] = useState('');

  const addTodo = async () => {
    await axios.post('http://localhost:5000/api/todos', { name, description });
    fetchTodos();
    setName('');
    setDescription('');
  };

  return (
    <div className="todo-form">
      <h2>My todo</h2>
      <input
        type="text"
        placeholder="Todo Name"
        value={name}
        onChange={(e) => setName(e.target.value)}
      />
      <input
        type="text"
        placeholder="Todo Description"
        value={description}
        onChange={(e) => setDescription(e.target.value)}
      />
      <button onClick={addTodo}>Add Todo</button>
    </div>
  );
}

export default TodoForm;
------------------------------------------------------------------------------
----------------->TodoItem.js
import React, { useState } from 'react';
import axios from 'axios';

function TodoItem({ todo, fetchTodos }) {
  const [isEditing, setIsEditing] = useState(false);
  const [name, setName] = useState(todo.name);
  const [description, setDescription] = useState(todo.description);
  const [status, setStatus] = useState(todo.status);

  const updateTodo = async () => {
    await axios.patch(`http://localhost:5000/api/todos/${todo._id}`, { name, description, status });
    fetchTodos();
    setIsEditing(false);
  };

  const deleteTodo = async () => {
    await axios.delete(`http://localhost:5000/api/todos/${todo._id}`);
    fetchTodos();
  };

  return (
    <div className="card">
      {isEditing ? (
        <>
          <input value={name} onChange={(e) => setName(e.target.value)} />
          <input value={description} onChange={(e) => setDescription(e.target.value)} />
          <select value={status} onChange={(e) => setStatus(e.target.value)}>
            <option value="not completed">Not Completed</option>
            <option value="completed">Completed</option>
          </select>
          <button onClick={updateTodo}>Save</button>
        </>
      ) : (
        <>
          <p><strong>Name :</strong> {todo.name}</p>
          <p><strong>Description :</strong> {todo.description}</p>
          <p>
            <strong>Status :</strong> 
            <select value={status} onChange={(e) => {
              setStatus(e.target.value);
              updateTodo();
            }}>
              <option value="not completed">Not Completed</option>
              <option value="completed">Completed</option>
            </select>
          </p>
          <button onClick={() => setIsEditing(true)}>Edit</button>
          <button onClick={deleteTodo}>Delete</button>
        </>
      )}
    </div>
  );
}

export default TodoItem;
-----------------------------------------------------------------------
---------->TodoList.js

import React, { useState } from 'react';
import TodoItem from './TodoItem';

function TodoList({ todos, fetchTodos }) {
  const [statusFilter, setStatusFilter] = useState('All');

  const filteredTodos = todos.filter(todo => {
    if (statusFilter === 'All') return true;
    return todo.status === statusFilter.toLowerCase();
  });

  return (
    <div className="todo-list">
      <h3>My Todos</h3>
      <label>
        Status Filter: 
        <select onChange={(e) => setStatusFilter(e.target.value)}>
          <option value="All">All</option>
          <option value="Completed">Completed</option>
          <option value="Not Completed">Not Completed</option>
        </select>
      </label>
      <div className="todos">
        {filteredTodos.map(todo => (
          <TodoItem key={todo._id} todo={todo} fetchTodos={fetchTodos} />
        ))}
      </div>
    </div>
  );
}

export default TodoList;
------------------------------------------------------------------------------------------
----------->App.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import TodoForm from './components/TodoForm';
import TodoList from './components/TodoList';
import './styles.css';

function App() {
  const [todos, setTodos] = useState([]);

  const fetchTodos = async () => {
    const response = await axios.get('http://localhost:5000/api/todos');
    setTodos(response.data);
  };

  useEffect(() => {
    fetchTodos();
  }, []);

  return (
    <div className="App">
      <TodoForm fetchTodos={fetchTodos} />
      <TodoList todos={todos} fetchTodos={fetchTodos} />
    </div>
  );
}

export default App;
----------------------------------------------------------------
----->index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
-------------------------------------------------------------
----------->styles.css
.App {
  font-family: Arial, sans-serif;
  text-align: center;
  padding: 20px;
}

.todo-form, .todo-list {
  margin-bottom: 20px;
}

.todo-form input {
  margin: 0 10px 10px 0;
  padding: 10px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.todo-form button {
  padding: 10px 20px;
  font-size: 16px;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.todo-form button:hover {
  background-color: #218838;
}

.todo-list {
  text-align: left;
}

.todo-list .card {
  background-color: #f8f9fa;
  border: 1px solid #dee2e6;
  border-radius: 5px;
  padding: 15px;
  margin-bottom: 10px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.todo-list .card input {
  padding: 5px;
  margin-right: 10px;
}

.todo-list .card select {
  padding: 5px;
  margin-right: 10px;
}

.todo-list .card button {
  padding: 10px 15px;
  margin-right: 5px;
  font-size: 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.todo-list .card button:hover {
  opacity: 0.8;
}

.todo-list .card button:nth-child(3) {
  background-color: #ffc107;
  color: white;
}

.todo-list .card button:nth-child(3):hover {
  background-color: #e0a800;
}

.todo-list .card button:nth-child(4) {
  background-color: #dc3545;
  color: white;
}

.todo-list .card button:nth-child(4):hover {
  background-color: #c82333;
}
-----------------------------------------------------
----------->

